// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StillsApp;

#nullable disable

namespace StillsApp.DL.Migrations.Sqlite
{
    [DbContext(typeof(DataContext))]
    [Migration("20221011141647_initialSqlite")]
    partial class initialSqlite
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("StillsApp.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DistilleryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DistilleryId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("StillsApp.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DistilleryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DistilleryId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("StillsApp.Distillery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Distilleries");
                });

            modelBuilder.Entity("StillsApp.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BrandId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DistilleryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DistilleryId");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("StillsApp.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("StillsApp.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Base64Encoding")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DistilleryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DistilleryId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("StillsApp.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BarrelProof")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("BottleProof")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BrandId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PercentBarley")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PercentCorn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PercentRye")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PercentWheat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("StillsApp.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DistilleryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DistilleryId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("StillsApp.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ExperienceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExperienceId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("StillsApp.Address", b =>
                {
                    b.HasOne("StillsApp.Distillery", null)
                        .WithMany("Addresses")
                        .HasForeignKey("DistilleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StillsApp.Brand", b =>
                {
                    b.HasOne("StillsApp.Distillery", null)
                        .WithMany("Brands")
                        .HasForeignKey("DistilleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StillsApp.Distillery", b =>
                {
                    b.HasOne("StillsApp.Owner", null)
                        .WithMany("Distilleries")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StillsApp.Experience", b =>
                {
                    b.HasOne("StillsApp.Distillery", "Distillery")
                        .WithMany("Experiences")
                        .HasForeignKey("DistilleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distillery");
                });

            modelBuilder.Entity("StillsApp.Photo", b =>
                {
                    b.HasOne("StillsApp.Distillery", null)
                        .WithMany("Photos")
                        .HasForeignKey("DistilleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StillsApp.Recipe", b =>
                {
                    b.HasOne("StillsApp.Brand", null)
                        .WithMany("Recipes")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StillsApp.Review", b =>
                {
                    b.HasOne("StillsApp.Distillery", null)
                        .WithMany("Reviews")
                        .HasForeignKey("DistilleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StillsApp.Ticket", b =>
                {
                    b.HasOne("StillsApp.Experience", null)
                        .WithMany("Tickets")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StillsApp.Brand", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("StillsApp.Distillery", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Brands");

                    b.Navigation("Experiences");

                    b.Navigation("Photos");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("StillsApp.Experience", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("StillsApp.Owner", b =>
                {
                    b.Navigation("Distilleries");
                });
#pragma warning restore 612, 618
        }
    }
}
